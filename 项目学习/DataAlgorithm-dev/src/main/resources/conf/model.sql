########## 设备表 ###############################
device.camera.sql=SELECT SBBM AS BM, JD, WD FROM OMOF_CAMERA_INFO WHERE SBZT = 1 AND SBBM IS NOT NULL
device.vehicle.sql=SELECT KKBH AS BM, JD, WD FROM OMOF_VEHICLE_BARRIER_INFO WHERE KKZT = 1 AND KKBH IS NOT NULL
device.wifi.efense.sql=SELECT RDBM AS BM, JD, WD, GLKKBH, GLSXJBM, GLMJBM FROM OMOF_WIFI_INFO WHERE RDBM IS NOT NULL UNION SELECT DWBM AS BM, JD, WD, GLKKBH, GLSXJBM, GLMJBM FROM OMOF_EFENSE_INFO WHERE DWBM IS NOT NULL
device.dooraccess.sql=SELECT MJBM AS BM, JD, WD, GLSXJBM, GLRDBM FROM OMOF_DOORACCESS_INFO WHERE MJZT = 1 AND MJBM IS NOT NULL
########## 设备关系表 ###############################
phone.imei.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='PHONE' AND DEVICE_TYPE2='IMEI'
phone.imsi.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='PHONE' AND DEVICE_TYPE2='IMSI'
phone.mac.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='PHONE' AND DEVICE_TYPE2='MAC'
imei.imsi.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='IMEI' AND DEVICE_TYPE2='IMSI'
imei.mac.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='IMEI' AND DEVICE_TYPE2='MAC'
imsi.mac.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='IMSI' AND DEVICE_TYPE2='MAC'
car.imsi.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='CAR' AND DEVICE_TYPE2='IMSI'
car.mac.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='CAR' AND DEVICE_TYPE2='MAC'
car.imei.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='CAR' AND DEVICE_TYPE2='IMEI'
person.imsi.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='PERSON' AND DEVICE_TYPE2='IMSI'
person.mac.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='PERSON' AND DEVICE_TYPE2='MAC'
person.imei.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='PERSON' AND DEVICE_TYPE2='IMEI'
car.phone.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='CAR' AND DEVICE_TYPE2='PHONE'
person.phone.device=SELECT DEVICE_ID1, DEVICE_ID2 FROM TB_DEVICE_ROUND WHERE DEVICE_TYPE1='PERSON' AND DEVICE_TYPE2='PHONE'

## 每小时分布任务 ###############################
car.load.hour=SELECT DISTINCT JGSK, CONCAT(HPHM,'-',HPYS) AS HPHM, TOLLGATE_ID,INFO_ID FROM CAR_DETECT_INFO WHERE stat_day=@startDate@ AND hour=@hour@ AND JGSK>= @startDateTime@ AND JGSK< @endDateTime@ AND HPHM is not null AND length(HPHM) > 3 AND isValidEntity(HPHM,'CAR')
imsi.load.hour=SELECT DISTINCT JGSK, IMSI, DEVICE_ID,INFO_ID FROM EFENCE_DETECT_INFO WHERE stat_day=@startDate@ AND hour=@hour@ AND JGSK>= @startDateTime@ AND JGSK< @endDateTime@ AND IMSI is not null AND length(IMSI) > 1 AND isValidEntity(IMSI,'IMSI')
mac.load.hour=SELECT DISTINCT JGSK, MAC, DEVICE_ID,INFO_ID FROM EFENCE_DETECT_INFO WHERE stat_day=@startDate@ AND hour=@hour@ AND JGSK>= @startDateTime@ AND JGSK< @endDateTime@ AND MAC is not null AND length(MAC) > 1 AND isValidEntity(MAC,'MAC')
imei.load.hour=SELECT DISTINCT JGSK, IMEI, DEVICE_ID,INFO_ID FROM EFENCE_DETECT_INFO WHERE stat_day=@startDate@ AND hour=@hour@ AND IMEI is not null AND length(IMEI) > 1 AND JGSK>= @startDateTime@ AND JGSK< @endDateTime@ AND isValidEntity(IMEI,'IMEI')
person.load.hour=SELECT DISTINCT substr(shot_time,3,12) as  JGSK,  person_id as PERSON_ID, device_id as ORIGINAL_DEVICE_ID,INFO_ID FROM  HIVE_FACE_DETECT_RL WHERE stat_day=@startDate@ AND hour=@hour@ AND PERSON_ID is not null AND substr(shot_time,3,12)>=@startDateTime@  AND substr(shot_time,3,12)< @endDateTime@
phone.load.hour=SELECT DISTINCT JGSK, MSISDN, DEVICE_ID,INFO_ID FROM EFENCE_DETECT_INFO WHERE stat_day=@startDate@ AND hour=@hour@ AND JGSK>= @startDateTime@ AND JGSK< @endDateTime@ AND MSISDN is not null AND length(MSISDN) > 1 AND isValidEntity(MSISDN,'PHONE')


########## FPtree ###############################
### 每天计算FPtree
fptree.distribute.load.day=SELECT OBJECT_ID_A, OBJECT_ID_B, TIMESTAMP_A, TIMESTAMP_B, DEVICE_ID FROM DM_RELATION_DISTRIBUTE_DETAIL WHERE STAT_DATE>= '@startDate@' AND STAT_DATE <= '@endDate@' AND TYPE = '@type@'
### 每天汇总计算
fptree.rel.distribute.day.total=SELECT ID, ID_TYPE, SUM(TOTAL) FROM (SELECT DISTINCT STAT_DATE, OBJECT_ID_A AS ID, '@category1@' as ID_TYPE, TOTAL_A AS TOTAL FROM DM_RELATION_DISTRIBUTE_STAT WHERE STAT_DATE>='@startDate@' AND STAT_DATE<='@endDate@' AND TYPE='@type@' UNION ALL SELECT DISTINCT STAT_DATE, OBJECT_ID_B AS ID, '@category2@' as ID_TYPE, TOTAL_B AS TOTAL FROM DM_RELATION_DISTRIBUTE_STAT WHERE STAT_DATE>='@startDate@' AND STAT_DATE<='@endDate@' AND TYPE='@type@')a GROUP BY ID, ID_TYPE
fptree.rel.distribute.total=SELECT OBJECT_ID,TYPE, SUM(TOTAL) AS TOTAL FROM DM_ID_DISTRIBUTE_DAY WHERE STAT_DATE >= '@startDate@' AND STAT_DATE <= '@endDate@' AND TYPE IN (@type@) GROUP BY OBJECT_ID,TYPE
fptree.max.date=SELECT max(STAT_DATE) FROM DM_FPTREE_FREREQUENT_ITEMS WHERE CAL_TYPE = @calType@ AND type = '@type@' AND STAT_DATE <= '@startDate@'
fptree.agg.sql1=SELECT OBJECT_ID_A,TYPE_A,OBJECT_ID_B,TYPE_B,SCORE,TIMES,FIRST_TIME,FIRST_DEVICE,LAST_TIME,LAST_DEVICE,SET_NUM FROM DM_FPTREE_FREREQUENT_ITEMS WHERE CAL_TYPE = 1 AND type = '@type@' AND STAT_DATE>'@startDate@' AND STAT_DATE<='@endDate@'
fptree.agg.sql2=SELECT OBJECT_ID_A,TYPE_A,OBJECT_ID_B,TYPE_B,SCORE,TIMES,FIRST_TIME,FIRST_DEVICE,LAST_TIME,LAST_DEVICE,SET_NUM FROM DM_FPTREE_FREREQUENT_ITEMS WHERE CAL_TYPE = @calType@ AND type = '@type@' AND STAT_DATE>='@startDate@' AND STAT_DATE<='@endDate@'
fptree.agg.sql3=SELECT OBJECT_ID_A,TYPE_A,OBJECT_ID_B,TYPE_B,SCORE,TIMES,FIRST_TIME,FIRST_DEVICE,LAST_TIME,LAST_DEVICE,SET_NUM FROM(SELECT OBJECT_ID_A,TYPE_A,OBJECT_ID_B,TYPE_B,SCORE,TIMES,FIRST_TIME,FIRST_DEVICE,LAST_TIME,LAST_DEVICE,SET_NUM FROM DM_FPTREE_FREREQUENT_ITEMS WHERE CAL_TYPE = @calType@ AND type = '@type@' AND stat_date>='@pre180Date@' AND stat_date<='@startDate@' union all SELECT OBJECT_ID_A,TYPE_A,OBJECT_ID_B,TYPE_B,SCORE,TIMES,FIRST_TIME,FIRST_DEVICE,LAST_TIME,LAST_DEVICE,SET_NUM FROM DM_FPTREE_FREREQUENT_ITEMS WHERE CAL_TYPE = 1 AND type = '@type@' AND stat_date>'@startDate@' AND stat_date<='@endDate@' )a

########## DTW ###############################
dtw.distribute.load.day=SELECT OBJECT_ID_A, OBJECT_ID_B, TIMESTAMP_A, TIMESTAMP_B, DEVICE_ID FROM DM_RELATION_DISTRIBUTE_DETAIL WHERE STAT_DATE>= '@startDate@' AND STAT_DATE <= '@endDate@' AND TYPE = '@type@'
dtw.distribute.load.day.object=SELECT DISTINCT OBJECT_ID, TIMESTAMP_T, DEVICE_ID FROM ( SELECT DISTINCT OBJECT_ID_A AS OBJECT_ID, TIMESTAMP_A AS TIMESTAMP_T, DEVICE_ID FROM DM_RELATION_DISTRIBUTE_DETAIL WHERE STAT_DATE>= '@startDate@' AND STAT_DATE <= '@endDate@' AND TYPE = '@type@'  UNION ALL SELECT DISTINCT OBJECT_ID_B AS OBJECT_ID, TIMESTAMP_B AS TIMESTAMP_T, DEVICE_ID FROM DM_RELATION_DISTRIBUTE_DETAIL WHERE STAT_DATE>= '@startDate@' AND STAT_DATE <= '@endDate@' AND TYPE = '@type@')b
dtw.all.result=SELECT STAT_DATE, OBJECT_ID_A, TYPE_A, OBJECT_ID_B, TYPE_B, TIMES, SCORE, FIRST_TIME, FIRST_DEVICE, LAST_TIME, LAST_DEVICE FROM DM_DTW_ITEMS WHERE STAT_DATE>='@startDate@' AND STAT_DATE<='@endDate@' AND TYPE='@type@'
dtw.object.days=SELECT OBJECT_ID, TYPE, COUNT(DISTINCT STAT_DATE) AS DAYS FROM (SELECT DISTINCT OBJECT_ID_B AS OBJECT_ID, TYPE_B AS TYPE, substring(STAT_DATE,0,8) AS STAT_DATE FROM DM_RELATION_DISTRIBUTE_STAT WHERE STAT_DATE>='@startDate@' AND STAT_DATE<='@endDate@' AND TYPE='@type@'  UNION ALL SELECT DISTINCT OBJECT_ID_A AS OBJECT_ID, TYPE_A AS TYPE, substring(STAT_DATE,0,8) AS STAT_DATE FROM DM_RELATION_DISTRIBUTE_STAT WHERE STAT_DATE>='@startDate@' AND STAT_DATE<='@endDate@' AND TYPE='@type@')A GROUP BY OBJECT_ID, TYPE

########## LCSS相关sql ###############################
#按天计算LCSS：每天加载DM_RELATION_DISTRIBUTE_DETAIL明细表中的数据计算LCSS
lcss.day.load.detail=SELECT object_id_a,type_a,object_id_b,type_b,device_id,timestamp_a,timestamp_b,sub_time,info_id_a,info_id_b FROM DM_RELATION_DISTRIBUTE_DETAIL  WHERE stat_date>=@statDate@00 and stat_date<=@statDate@23 and type='@type@'
lcss.day.load.seq=SELECT object_id,seq_length,seq_str FROM DM_LCSS_OBJECT_HOUR  WHERE stat_date>=@statDate@00 and stat_date<=@statDate@23  and type='@type@'

#汇总计算sql：每天加载当天的LCSS结果（DM_LCSS_DAY）与历史结果（DM_LCSS）汇总计算
lcss.load.day.result=SELECT OBJECT_ID_A,TYPE_A,OBJECT_ID_B,TYPE_B,TIME_SUM,SEQ_SAME_LENGTH,FIRST_TIME,FIRST_DEVICE,LAST_TIME,LAST_DEVICE FROM DM_LCSS_DAY WHERE OBJECT_ID_A IS NOT NULL AND OBJECT_ID_A !='' AND OBJECT_ID_A != '-'  AND OBJECT_ID_B IS NOT NULL AND OBJECT_ID_B !='' AND OBJECT_ID_B != '-' AND stat_date>='20@startDate@' AND stat_date<='20@endDate@'  and type='@type@'
lcss.load.day.seq=SELECT OBJECT_ID,SEQ_LENGTH FROM DM_LCSS_OBJECT_DAY WHERE stat_date>='20@startDate@' and stat_date<='20@endDate@'  and type='@type@'


#######熵值法相关sql ######
####同行/融合特征数据预处理
##计算一天的特征数据
objecta-objectb.feature.perday.data.preprocess=set hive.exec.dynamic.partition.mode=nonstrict;create table if not exists dm_entropy_feature_preprocess_result_day(time_flag string,object_id_a string,type_a int,object_id_b string,type_b int,total int , first_time string, first_device string,last_time string, last_device string)partitioned by (stat_date string, type string) STORED AS orc tblproperties("orc.compress"="SNAPPY");create table if not exists dm_entropy_car_device_flow_day(time_flag string,avg_flow double,avg_flow_t double)partitioned by (stat_date string) STORED AS orc tblproperties("orc.compress"="SNAPPY");insert overwrite table dm_entropy_feature_preprocess_result_day partition(stat_date="@startDate@", TYPE ) select TIME_FLAG,OBJECT_ID_A,TYPE_A, OBJECT_ID_B, TYPE_B,  TOTAL, from_unixtime(cast(MIN_TIMESTAMP_DEVICE_ID_ARRAY[0]  as  bigint)) as FIRST_TIME,MIN_TIMESTAMP_DEVICE_ID_ARRAY[1] FIRST_DEVICE, from_unixtime(cast(MAX_TIMESTAMP_DEVICE_ID_ARRAY[0] as  bigint)) as LAST_TIME,MAX_TIMESTAMP_DEVICE_ID_ARRAY[1] LAST_DEVICE, TYPE  from (select TIME_FLAG,OBJECT_ID_A,TYPE_A, OBJECT_ID_B, TYPE_B,  TOTAL,split(case when MIN_TIMESTAMP_A_DEVICE_ID > MIN_TIMESTAMP_B_DEVICE_ID then MIN_TIMESTAMP_B_DEVICE_ID else MIN_TIMESTAMP_A_DEVICE_ID END,"#")  as MIN_TIMESTAMP_DEVICE_ID_ARRAY , split(case when MAX_TIMESTAMP_A_DEVICE_ID > MAX_TIMESTAMP_B_DEVICE_ID then MAX_TIMESTAMP_A_DEVICE_ID else MAX_TIMESTAMP_B_DEVICE_ID END,"#")  as MAX_TIMESTAMP_DEVICE_ID_ARRAY, TYPE  from (select TIME_FLAG,OBJECT_ID_A,TYPE_A, OBJECT_ID_B, TYPE_B,  COUNT(1) TOTAL, MAX(TIMESTAMP_A_DEVICE_ID) MAX_TIMESTAMP_A_DEVICE_ID,MIN(TIMESTAMP_A_DEVICE_ID) MIN_TIMESTAMP_A_DEVICE_ID, MAX(TIMESTAMP_B_DEVICE_ID) MAX_TIMESTAMP_B_DEVICE_ID,MIN(TIMESTAMP_B_DEVICE_ID) MIN_TIMESTAMP_B_DEVICE_ID, TYPE  from (select OBJECT_ID_A,TYPE_A, OBJECT_ID_B, TYPE_B ,TIMESTAMP_A_DEVICE_ID, TIMESTAMP_B_DEVICE_ID, case when hour >=0 and hour<=7 then "0~7" when hour >=8 and hour<=15 then "8~15" when hour >=16 and hour<=23 then "16~23" else "error" end as TIME_FLAG, TYPE   from (select OBJECT_ID_A,TYPE_A, OBJECT_ID_B, TYPE_B, concat(TIMESTAMP_A,"#",DEVICE_ID) TIMESTAMP_A_DEVICE_ID, concat(TIMESTAMP_B,"#",DEVICE_ID) TIMESTAMP_B_DEVICE_ID, cast(substring(STAT_DATE,9,2) as int) hour, TYPE from DM_RELATION_DISTRIBUTE_DETAIL d where STAT_DATE >= '@startDate@00' and STAT_DATE <= '@endDate@00' ) t ) t1 group by TIME_FLAG,OBJECT_ID_A,TYPE_A, OBJECT_ID_B, TYPE_B, TYPE  ) tt ) ttt;insert overwrite table dm_entropy_car_device_flow_day partition(stat_date='@startDate@') select time_flag,avg_flow, 1/avg_flow as avg_flow_t from (select time_flag, (count(1)/count(distinct device_id)) as avg_flow from (select device_id,case when hour >=0 and hour<=7 then "0~7" when hour >=8 and hour<=15 then "8~15" when hour >=16 and hour<=23 then "16~23" else"error"end as time_flag from (select tollgate_id as device_id, cast(hour as int ) hour from car_detect_info where stat_day >= '@startStatDay@' and stat_day < '@endStatDay@' ) t ) t1 group by time_flag ) t;create table if not exists dm_entropy_jqxwifi_device_flow_day(time_flag string,avg_flow double,avg_flow_t double)partitioned by (stat_date string) STORED AS orc tblproperties("orc.compress"="SNAPPY");insert overwrite table dm_entropy_jqxwifi_device_flow_day partition(stat_date='@startDate@') select time_flag,avg_flow, 1/avg_flow as avg_flow_t from (select time_flag, (count(1)/count(distinct device_id)) as avg_flow from (select device_id,case when hour >=0 and hour<=7 then "0~7" when hour >=8 and hour<=15 then "8~15" when hour >=16 and hour<=23 then "16~23" else"error"end as time_flag from (select device_id, cast(hour as int ) hour from tb_efence_detect_info where stat_day >= '@startStatDay@' and stat_day < '@endStatDay@' ) t ) t1 group by time_flag ) t

##计算一段时间特征数据
objecta-objectb.feature.longdays.data.preprocess=set hive.exec.dynamic.partition.mode=nonstrict;drop table if exists dm_entropy_car_device_flow_tmp;drop table if exists dm_entropy_jqxwifi_device_flow_tmp;create table if not exists dm_entropy_feature_preprocess_result(time_flag string,object_id_a string,type_a int,object_id_b string,type_b int,total int,days int, first_time string, first_device string,last_time string, last_device string) partitioned by (type string)STORED AS orc tblproperties("orc.compress"="SNAPPY");insert overwrite table dm_entropy_feature_preprocess_result partition(TYPE ) select  time_flag, object_id_a,type_a, object_id_b, type_b, total, days,first_time_first_device_array[0] as first_time, first_time_first_device_array[1] as first_device, last_time_last_device_array[0] as last_time, last_time_last_device_array[1] as last_device, type from (select object_id_a,type_a, object_id_b, type_b, time_flag, sum(total) total, count(distinct stat_date) days, split(min(first_time_first_device_str),"#") as first_time_first_device_array, split(max(last_time_last_device_str),"#") as last_time_last_device_array , type from (select time_flag, object_id_a,type_a, object_id_b, type_b, total, stat_date, concat(first_time, "#", first_device) first_time_first_device_str, concat(last_time, "#", last_device) last_time_last_device_str, type from dm_entropy_feature_preprocess_result_day where stat_date>='@startDate@' and stat_date<='@endDate@'  ) t group by object_id_a,type_a, object_id_b, type_b, time_flag, type ) tt;create table dm_entropy_car_device_flow_tmp STORED AS orc tblproperties("orc.compress"="SNAPPY") as select time_flag, avg_flow_sum,avg_flow,avg_flow_t,days from (select time_flag, sum(avg_flow_sum) as avg_flow_sum,(sum(avg_flow_sum)/count(distinct stat_date)) as avg_flow,1/(sum(avg_flow_sum)/count(distinct stat_date)) as avg_flow_t, count(distinct stat_date) as days from (select time_flag,avg_flow as avg_flow_sum, stat_date from dm_entropy_car_device_flow_day where stat_date>='@startDate@' and stat_date<='@endDate@') t group by time_flag ) tt;drop table if exists dm_entropy_car_device_flow;alter table dm_entropy_car_device_flow_tmp rename to dm_entropy_car_device_flow;create table dm_entropy_jqxwifi_device_flow_tmp STORED AS orc tblproperties("orc.compress"="SNAPPY") as select time_flag, avg_flow_sum,avg_flow,avg_flow_t,days from (select time_flag, sum(avg_flow_sum) as avg_flow_sum,(sum(avg_flow_sum)/count(distinct stat_date)) as avg_flow,1/(sum(avg_flow_sum)/count(distinct stat_date)) as avg_flow_t, count(distinct stat_date) as days from (select time_flag,avg_flow as avg_flow_sum, stat_date from dm_entropy_jqxwifi_device_flow_day where stat_date>='@startDate@' and stat_date<='@endDate@') t group by time_flag ) tt;drop table if exists dm_entropy_jqxwifi_device_flow;alter table dm_entropy_jqxwifi_device_flow_tmp rename to dm_entropy_jqxwifi_device_flow

####特征权重计算
objecta-objectb.perday.feature.data.sql=select t1.time_flag,t1.object_id_a ,t1.type_a,t1.object_id_b,t1.type_b,t1.total,t2.avg_flow_t from dm_entropy_feature_preprocess_result_day t1 join dm_entropy_car_device_flow_day t2 on  t1.time_flag = t2.time_flag where t1.stat_date='@startDate@' and t1.type='@type@' and t2.stat_date='@startDate@'
objecta-objectb.longdays.feature.data.sql=select t1.time_flag,t1.object_id_a ,t1.type_a,t1.object_id_b,t1.type_b,t1.days,t2.avg_flow_t from dm_entropy_feature_preprocess_result t1 join dm_entropy_car_device_flow t2 on t1.time_flag = t2.time_flag where t1.type='@type@'


##imsi-imsi
efence_a-efence_b.perday.feature.data.sql=select t1.time_flag,t1.object_id_a ,t1.type_a,t1.object_id_b,t1.type_b,t1.total,t2.avg_flow_t from dm_entropy_feature_preprocess_result_day t1 join dm_entropy_jqxwifi_device_flow_day t2 on  t1.time_flag = t2.time_flag where t1.stat_date='@startDate@' and t1.type='@type@' and t2.stat_date='@startDate@'
efence_a-efence_b.longdays.feature.data.sql=select t1.time_flag,t1.object_id_a ,t1.type_a,t1.object_id_b,t1.type_b,t1.days,t2.avg_flow_t from dm_entropy_feature_preprocess_result t1 join dm_entropy_jqxwifi_device_flow t2 on t1.time_flag = t2.time_flag where t1.type='@type@'

####结果计算
entropy.weight.load=select index_name,weight from dm_entropy_weight where stat_date='@startDate@' and type='@type@' and parent_index_name = '@parentIndexName@'
objecta-objectb.perday.result.data.sql=select t1.time_flag as time_flag,t1.object_id_a ,t1.type_a,t1.object_id_b,t1.type_b,t1.total as total,t1.total as times, t2.avg_flow_t , first_time, first_device, last_time,last_device from dm_entropy_feature_preprocess_result_day t1 join dm_entropy_car_device_flow_day t2 on t1.time_flag = t2.time_flag where t1.stat_date='@startDate@' and t1.type='@type@' and t2.stat_date='@startDate@'
objecta-objectb.longdays.result.data.sql=select t1.time_flag as time_flag,t1.object_id_a,t1.type_a ,t1.object_id_b,t1.type_b ,t1.days as days,t1.total as times, t2.avg_flow_t , first_time,  first_device, last_time, last_device from dm_entropy_feature_preprocess_result t1 join dm_entropy_car_device_flow t2 on t1.time_flag = t2.time_flag where t1.type='@type@'

##imsi-imsi
efence_a-efence_b.perday.result.data.sql=select t1.time_flag as time_flag,t1.object_id_a ,t1.type_a,t1.object_id_b,t1.type_b,t1.total as total,t1.total as times, t2.avg_flow_t , first_time, first_device, last_time,last_device from dm_entropy_feature_preprocess_result_day t1 join dm_entropy_jqxwifi_device_flow_day t2 on t1.time_flag = t2.time_flag where t1.stat_date='@startDate@' and t1.type='@type@' and t2.stat_date='@startDate@'
efence_a-efence_b.longdays.result.data.sql=select t1.time_flag as time_flag,t1.object_id_a,t1.type_a ,t1.object_id_b,t1.type_b ,t1.days as days,t1.total as times, t2.avg_flow_t , first_time,  first_device, last_time, last_device from dm_entropy_feature_preprocess_result t1 join dm_entropy_jqxwifi_device_flow t2 on t1.time_flag = t2.time_flag where t1.type='@type@'


####特征权重计算(目前暂不使用，直接取天和一段时间（比如一个月）的平均分)
##car-imsi.perlongday.feature.data.sql=select object_id_a, type_a, object_id_b, type_b , max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@'' and rel_type='@relationType@' and type='@type@' and result_type='car-imsi-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@'' and rel_type='@relationType@' and type='@type@' and result_type='car-imsi-longdays') t group by object_id_a ,type_a,object_id_b,type_b

####最终结果计算
car-car.perlongday.result.data.sql=select object_id_a, type_a, object_id_b, type_b ,(per_day_score+ long_days_score)/2 as score ,  times, first_time,  first_device, last_time,  last_device from( select object_id_a, type_a, object_id_b, type_b , sum(times) times, max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, 0 as times, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-car-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, times, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-car-longdays') t group by object_id_a ,type_a,object_id_b,type_b) tt
car-imsi.perlongday.result.data.sql=select object_id_a, type_a, object_id_b, type_b ,(per_day_score+ long_days_score)/2 as score ,  times, first_time,  first_device, last_time,  last_device from( select object_id_a, type_a, object_id_b, type_b , sum(times) times, max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, 0 as times, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-imsi-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, times, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-imsi-longdays') t group by object_id_a ,type_a,object_id_b,type_b) tt
car-imei.perlongday.result.data.sql=select object_id_a, type_a, object_id_b, type_b ,(per_day_score+ long_days_score)/2 as score ,  times, first_time,  first_device, last_time,  last_device from( select object_id_a, type_a, object_id_b, type_b , sum(times) times, max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, 0 as times, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-imei-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, times, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-imei-longdays') t group by object_id_a ,type_a,object_id_b,type_b) tt
car-phone.perlongday.result.data.sql=select object_id_a, type_a, object_id_b, type_b ,(per_day_score+ long_days_score)/2 as score ,  times, first_time,  first_device, last_time,  last_device from( select object_id_a, type_a, object_id_b, type_b , sum(times) times, max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, 0 as times, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-phone-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, times, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-phone-longdays') t group by object_id_a ,type_a,object_id_b,type_b) tt
car-mac.perlongday.result.data.sql=select object_id_a, type_a, object_id_b, type_b ,(per_day_score+ long_days_score)/2 as score ,  times, first_time,  first_device, last_time,  last_device from( select object_id_a, type_a, object_id_b, type_b , sum(times) times, max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, 0 as times, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-mac-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, times, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='car-mac-longdays') t group by object_id_a ,type_a,object_id_b,type_b) tt
imsi-imsi.perlongday.result.data.sql=select object_id_a, type_a, object_id_b, type_b ,(per_day_score+ long_days_score)/2 as score ,  times, first_time,  first_device, last_time,  last_device from( select object_id_a, type_a, object_id_b, type_b , sum(times) times, max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, 0 as times, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='imsi-imsi-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, times, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='imsi-imsi-longdays') t group by object_id_a ,type_a,object_id_b,type_b) tt
imei-imei.perlongday.result.data.sql=select object_id_a, type_a, object_id_b, type_b ,(per_day_score+ long_days_score)/2 as score ,  times, first_time,  first_device, last_time,  last_device from( select object_id_a, type_a, object_id_b, type_b , sum(times) times, max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, 0 as times, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='imei-imei-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, times, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='imei-imei-longdays') t group by object_id_a ,type_a,object_id_b,type_b) tt
mac-mac.perlongday.result.data.sql=select object_id_a, type_a, object_id_b, type_b ,(per_day_score+ long_days_score)/2 as score ,  times, first_time,  first_device, last_time,  last_device from( select object_id_a, type_a, object_id_b, type_b , sum(times) times, max(per_day_score) per_day_score, max(long_days_score) long_days_score , max(first_time) first_time, max(first_device) first_device,max(last_time) last_time, max(last_device) last_device from (select object_id_a, type_a,object_id_b, type_b, 0 as times, avg(score) per_day_score, 0 as long_days_score,'' first_time, '' first_device, '' last_time,'' last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='mac-mac-perday' group by object_id_a, type_a,object_id_b, type_b  union all select object_id_a, type_a,object_id_b, type_b, times, 0 as per_day_score,score long_days_score, first_time,first_device, last_time,last_device from dm_entropy_result where stat_date='@startDate@' and rel_type='@relationType@' and type='@type@' and result_type='mac-mac-longdays') t group by object_id_a ,type_a,object_id_b,type_b) tt


#######场所伴随分析sql########################
sv.accompany.day.sql=SELECT DISTINCT person_id,device_id,shot_time FROM HIVE_FACE_DETECT_RL WHERE person_id IS NOT NULL AND stat_day='@shotDate@' AND data_src='@dataSource@'
sv.accompany.stat.load=SELECT DISTINCT device_id,object_id_a,object_id_b,today_times,timestamp_a,timestamp_b from SV_ACCOMPANY_DAY WHERE type='@type@' AND stat_date>'@startDate@' AND stat_date<='@endDate@' AND type_a='@category1@' AND type_b='@category2@'
sv.accompany.load.all=SELECT DISTINCT object_id_a,object_id_b,times,score,first_time,first_device,last_time,last_device FROM SV_ACCOMPANY WHERE type='@type@' AND stat_date='@shotDate@' AND type_a='@category1@' AND type_b='@category2@'

#######融合分析结果入es########################
fusion.relation.data.sql=SELECT DISTINCT object_id_a,object_attr_a,type_a,object_id_b,object_attr_b,type_b,rel_id,rel_type,rel_attr,first_time,last_time,total,score,first_device,last_device FROM dm_relation where @where@
fusion.relation.stat.date.sql=SELECT rel_id,max(stat_date) FROM dm_relation GROUP BY rel_id ORDER BY rel_id

####### 关联分析 ########################
## mysql获取人员档案数据
#mysql.person.archive.info=SELECT DISTINCT t1.PERSON_ID,t2.ID_TYPE,t2.ID_NUMBER,t2.PERSON_NAME FROM ARCHIVE_PERSON_INFO t1 JOIN ARCHIVE_PERSON_STORAGE t2 ON t1.PERSON_RECORD_ID=t2.PERSON_RECORD_ID WHERE t1.PERSON_ID IS NOT NULL AND t2.ID_NUMBER IS NOT NULL
mysql.person.archive.info=SELECT DISTINCT t1.PERSON_ID,t2.ID_TYPE,t2.ID_NUMBER,t2.PERSON_NAME FROM ARCHIVE_PERSON_INFO t1 JOIN ARCHIVE_PERSON_STORAGE t2 ON t1.PERSON_RECORD_ID=t2.PERSON_RECORD_ID WHERE t1.PERSON_ID IS NOT NULL AND t2.ID_NUMBER IS NOT NULL UNION ALL SELECT DISTINCT PERSON_ID,ENGINE_ID_TYPE,ENGINE_ID_NUMBER,ENGINE_PERSON_NAME  FROM ARCHIVE_PERSON_INFO WHERE PERSON_ID  IS NOT NULL AND ENGINE_ID_NUMBER IS NOT NULL
## mysql获取车辆档案数据
mysql.car.archive.info=SELECT DISTINCT VEHICLE_ID,CONCAT(PLATE_NO,'-',PLATE_COLOR) as PLATE_NO  FROM ARCHIVE_VEHICLE_INFO WHERE PLATE_NO IS NOT NULL AND VEHICLE_ID IS NOT NULL
## 人脸整合表读取faceId personId
face.detect.load.day=SELECT DISTINCT person_id,info_id,device_id,shot_time FROM HIVE_FACE_DETECT_RL WHERE stat_day='@startDate@' AND PERSON_ID IS NOT NULL
## 人脸抓拍明细表读取faceId personId
face.info.load.day=SELECT DISTINCT info_id,viid_object_id FROM FACE_INFO WHERE stat_day='@startDate@' AND info_id IS NOT NULL AND viid_object_id IS NOT NULL
## 人脸-人体结果表读取 faceId personBodyId
face.person.body.load.day=SELECT DISTINCT OBJECT_ID_A,OBJECT_ID_B FROM DM_COMMON_STAT_DAY WHERE stat_date='@startDate@' AND type='@type@'
## 车辆主副驾驶数据
vehicle.front.load.day=SELECT DISTINCT DRIVER_FACE_VIID_ID,CO_DRIVER_FACE_VIID_ID,PLATE_NO,PLATE_COLOR,from_unixtime(unix_timestamp(PASS_TIME,'yyMMddHHmmss'),'yyyyMMddHHmmss') PASS_TIME FROM VEHICLE_FRONT_FACE_INFO WHERE stat_day='@startDate@' AND DRIVER_FACE_VIID_ID IS NOT NULL AND CO_DRIVER_FACE_VIID_ID IS NOT NULL AND PLATE_NO IS NOT NULL
## 人员-车辆汇总表读取数据
person.car.load.all=SELECT DISTINCT OBJECT_ID_A,OBJECT_ID_B,CNT,REMARK,FIRST_TIME,LAST_TIME FROM DM_COMMON_STAT WHERE stat_date='@startDate@' AND type='@type@' AND rel_type='@relationType@'


#############人体人脸关联统计####################
##因为faceid/人体ID都是来源于各自表的INFOID，所以不会重复，因此不需要总表汇总，但是这样表里面的数据会很大，逼近原始表啊....要注意！####
##personBody.face.relate.sql=INSERT OVERWRITE TABLE DM_COMMON_STAT_DAY PARTITION(STAT_DATE,TYPE) SELECT FACEID as OBJECT_ID_A, '@type_a@' TYPE_A, PERSONID as OBJECT_ID_B, '@type_b@' TYPE_B, COUNT(1) CNT , '' REMARK,MIN(JGSK) FIRST_TIME, MAX(JGSK) LAST_TIME  ,'20@endDate@' AS STAT_DATE, 'personbody-face' AS  TYPE FROM(SELECT  viid_object_id AS PERSONID,praseRelateID('06',RELATED_LIST) AS FACEID,  JGSK FROM VIDEO_PERSON_INFO WHERE stat_day='@endDate@' AND RELATED_LIST is not null UNION ALL SELECT  praseRelateID('01',RELATED_LIST) AS PERSONID, viid_object_id AS FACEID, JGSK FROM FACE_INFO WHERE stat_day='@endDate@' AND RELATED_LIST is not null) T GROUP BY PERSONID, FACEID;INSERT OVERWRITE TABLE DM_COMMON_STAT PARTITION(STAT_DATE,TYPE,REL_TYPE) SELECT OBJECT_ID_A, TYPE_A, OBJECT_ID_B, TYPE_B, SUM(CNT) CNT ,MIN(FIRST_TIME) FIRST_TIME, MAX(LAST_TIME) LAST_TIME ,'20@endDate@' AS STAT_DATE, '1' AS REL_TYPE,'personbody-face' AS  TYPE FROM DM_COMMON_STAT_DAY WHERE  stat_date>='20@startDate@' AND stat_date<='20@endDate@' AND TYPE='personBody-face' GROUP BY OBJECT_ID_A, TYPE_A, OBJECT_ID_B, TYPE_B;
personBody.face.relate.sql=SELECT PERSONID as OBJECT_ID_A, '@type_a@' TYPE_A, FACEID as OBJECT_ID_B, '@type_b@' TYPE_B, COUNT(1) CNT , '' REMARK,from_unixtime(unix_timestamp(MIN(JGSK),'yyMMddHHmmss'),'yyyyMMddHHmmss') FIRST_TIME, from_unixtime(unix_timestamp(MAX(JGSK),'yyMMddHHmmss'),'yyyyMMddHHmmss') LAST_TIME  ,'20@endDate@' AS STAT_DATE, 'personbody-face' AS  TYPE FROM(SELECT  viid_object_id AS PERSONID,praseRelateID('06',RELATED_LIST) AS FACEID,  JGSK FROM VIDEO_PERSON_INFO WHERE stat_day='@endDate@' AND RELATED_LIST is not null UNION ALL SELECT  praseRelateID('01',RELATED_LIST) AS PERSONID, viid_object_id AS FACEID, JGSK FROM FACE_INFO WHERE stat_day='@endDate@' AND RELATED_LIST is not null) T GROUP BY PERSONID, FACEID

#############同驾乘人员车辆####################
car-car.relate.sql=SELECT a.OBJECT_ID_A, a.TYPE_A, b.OBJECT_ID_A AS OBJECT_ID_B, b.TYPE_A AS TYPE_B, COUNT(1) CNT, '' REMARK, MIN(a.FIRST_TIME) FIRST_TIME, MAX(a.LAST_TIME) LAST_TIME ,'20@endDate@' AS STAT_DATE, '@rel_type@' AS REL_TYPE,'car-car' AS  TYPE  FROM (SELECT OBJECT_ID_A AS OBJECT_ID_B,TYPE_A AS TYPE_B,OBJECT_ID_B AS OBJECT_ID_A,TYPE_B AS TYPE_A,FIRST_TIME,LAST_TIME FROM DM_COMMON_STAT WHERE STAT_DATE ='20@endDate@' AND TYPE='person-car') a JOIN (SELECT OBJECT_ID_A AS OBJECT_ID_B,TYPE_A AS TYPE_B,OBJECT_ID_B AS OBJECT_ID_A,TYPE_B AS TYPE_A,FIRST_TIME,LAST_TIME FROM DM_COMMON_STAT WHERE STAT_DATE ='20@endDate@' AND TYPE='person-car') b ON a.OBJECT_ID_B = b.OBJECT_ID_B WHERE  a.OBJECT_ID_A != b.OBJECT_ID_A  GROUP BY a.OBJECT_ID_A,a.TYPE_A, b.OBJECT_ID_A,b.TYPE_A

#############共用车辆####################
person-person.relate.sql=SELECT a.OBJECT_ID_A, a.TYPE_A, '' as OBJECT_ATTR_A, b.OBJECT_ID_A AS OBJECT_ID_B, b.TYPE_A AS TYPE_B, '' as OBJECT_ATTR_B,100 AS SCORE,  MIN(a.FIRST_TIME) FIRST_TIME, '' AS FIRST_DEVICE, MAX(a.LAST_TIME) LAST_TIME ,'' AS LAST_DEVICE, COUNT(1) TOTAL, '共用车辆人员' REL_ATTR FROM (SELECT OBJECT_ID_A,TYPE_A,OBJECT_ID_B,TYPE_B,FIRST_TIME,LAST_TIME FROM DM_COMMON_STAT WHERE STAT_DATE ='20@endDate@' AND TYPE='person-car') a JOIN (SELECT OBJECT_ID_A,TYPE_A,OBJECT_ID_B,TYPE_B,FIRST_TIME,LAST_TIME FROM DM_COMMON_STAT WHERE STAT_DATE ='20@endDate@' AND TYPE='person-car') b ON a.OBJECT_ID_B = b.OBJECT_ID_B WHERE a.OBJECT_ID_A != b.OBJECT_ID_A  GROUP BY a.OBJECT_ID_A,a.TYPE_A, b.OBJECT_ID_A,b.TYPE_A

#############机场一人多证####################
airport.credentials.detect.insert=INSERT INTO DWM_PERSON_MORE_CREDENTIALS_DETECT (ID, PERSON_ID, ID_NUMBER, ID_TYPE, NAME , STAT_DATE, UPDATE_TIME) VALUES (?, ?, ?, ?, ? , ?, ?) ON DUPLICATE KEY UPDATE STAT_DATE = VALUES(STAT_DATE), UPDATE_TIME = VALUES(UPDATE_TIME)
airport.credentials.detect.update_time=UPDATE DWM_PERSON_MORE_CREDENTIALS_DETECT SET UPDATE_TIME = ? WHERE PERSON_ID IN ( SELECT PERSON_ID FROM ( SELECT DISTINCT PERSON_ID FROM DWM_PERSON_MORE_CREDENTIALS_DETECT WHERE STAT_DATE = ? ) T )
airport.credentials.detect.stat=SELECT s.* FROM ( SELECT concat(ID_NUMBER, '|', toString(ID_TYPE)) AS id, PERSON_ID, ID_NUMBER, ID_TYPE, NAME, substr(toString(max(CREATE_TIME)), 1, 8) AS update_time FROM HIVE_FACE_DETECT_RL WHERE isNotNull(ID_NUMBER) AND isNotNull(ID_TYPE) GROUP BY PERSON_ID, ID_NUMBER, ID_TYPE, NAME ) s join (SELECT PERSON_ID FROM (SELECT concat(ID_NUMBER, '|', toString(ID_TYPE)) AS id, PERSON_ID FROM HIVE_FACE_DETECT_RL WHERE isNotNull(ID_NUMBER) AND isNotNull(ID_TYPE) )t GROUP BY PERSON_ID HAVING COUNT(DISTINCT id) > 1) d on s.PERSON_ID = d.PERSON_ID
